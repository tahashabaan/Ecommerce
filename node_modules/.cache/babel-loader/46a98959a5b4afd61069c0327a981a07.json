{"ast":null,"code":"import { createStore } from \"redux\";\nconst initalState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'Add':\n      {\n        const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\n        const existingItem = state.items[existingItemIndex];\n        let updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\n        let updateItems;\n\n        if (existingItem) {\n          let updateItem = { ...existingItem,\n            amount: existingItem.amount + action.payload.amount\n          };\n          updateItems = [...state.items];\n          updateItems[existingItemIndex] = updateItem;\n        } else {\n          updateItems.concat(action.payload);\n        }\n\n        return {\n          items: updateItems,\n          totalAmount: updateTotalAmount\n        };\n      }\n\n    case 'Remove':\n      {\n        const existingItemIndex = state.items.findindex(item => item.id === action.id);\n        const existingItem = state.items[existingItemIndex];\n        const updateTotalAmount = existingItem.a;\n        let updateItems;\n\n        if (existingItem.length === 1) {\n          updateItems = state.items.filter(item => item.id !== action.id);\n        } else {\n          let updateItem = { ...existingItem,\n            amount: existingItem.amount - 1\n          };\n          updateItems = [...state.items];\n          updateItems[existingItemIndex] = updateItem;\n        }\n\n        return {\n          items: updateItems,\n          totalAmount: updateTotalAmount\n        };\n      }\n\n    default:\n      return {\n        initalState\n      };\n  }\n}; // store\n\n\nexport const store = createStore(reducer); // store.dispatch // anywhere you want","map":{"version":3,"names":["createStore","initalState","items","totalAmount","reducer","state","action","type","existingItemIndex","findindex","item","id","payload","existingItem","updateTotalAmount","amount","price","updateItems","updateItem","concat","a","length","filter","store"],"sources":["X:/kalBanan/udemy/projects/ORDER__FOOD__PROJECT/secon times/src/component/store_redux/store.js"],"sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initalState = {\r\n  items:[],\r\n  totalAmount:0\r\n}\r\nconst reducer = (state=initalState, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'Add' :\r\n      { const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\r\n       const existingItem = state.items[existingItemIndex];\r\n\r\n       let updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\r\n\r\n       let updateItems ;\r\n       if(existingItem) {\r\n        let updateItem = {\r\n          ...existingItem,\r\n          amount:existingItem.amount + action.payload.amount\r\n        }\r\n\r\n        updateItems = [...state.items];\r\n        updateItems[existingItemIndex] = updateItem;\r\n\r\n       }\r\n       else {\r\n        updateItems.concat(action.payload)\r\n       }\r\n       return {\r\n        items:updateItems,\r\n        totalAmount:updateTotalAmount\r\n       }\r\n      }\r\n       case 'Remove' : { \r\n        const existingItemIndex = state.items.findindex(item =>  item.id === action.id);\r\n        const existingItem = state.items[existingItemIndex];\r\n\r\n        const updateTotalAmount = existingItem.a\r\n        let updateItems;\r\n        if (existingItem.length === 1)  {\r\n          updateItems = state.items.filter ( item => item.id !== action.id)\r\n        } \r\n        else {\r\n         let  updateItem = {\r\n          ...existingItem,\r\n          amount:existingItem.amount - 1\r\n         }\r\n          updateItems = [...state.items];\r\n          updateItems[existingItemIndex] = updateItem;\r\n\r\n        }\r\n        return {\r\n          items:updateItems,\r\n          totalAmount:updateTotalAmount\r\n        }\r\n        \r\n\r\n      }\r\n\r\n      default: \r\n      return {initalState}\r\n  }\r\n\r\n}\r\n\r\n\r\n// store\r\n export const store = createStore(reducer)\r\n// store.dispatch // anywhere you want\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAC,EADY;EAElBC,WAAW,EAAC;AAFM,CAApB;;AAIA,MAAMC,OAAO,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAxBJ,WAAwB;EAAA,IAAXK,MAAW;;EAE7C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MACE;QAAE,MAAMC,iBAAiB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAAzD,CAA1B;QACD,MAAME,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYM,iBAAZ,CAArB;QAEA,IAAIM,iBAAiB,GAAGT,KAAK,CAACF,WAAN,GAAoBU,YAAY,CAACE,MAAb,GAAsBF,YAAY,CAACG,KAA/E;QAEA,IAAIC,WAAJ;;QACA,IAAGJ,YAAH,EAAiB;UAChB,IAAIK,UAAU,GAAG,EACf,GAAGL,YADY;YAEfE,MAAM,EAACF,YAAY,CAACE,MAAb,GAAsBT,MAAM,CAACM,OAAP,CAAeG;UAF7B,CAAjB;UAKAE,WAAW,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAd;UACAe,WAAW,CAACT,iBAAD,CAAX,GAAiCU,UAAjC;QAEA,CATD,MAUK;UACJD,WAAW,CAACE,MAAZ,CAAmBb,MAAM,CAACM,OAA1B;QACA;;QACD,OAAO;UACNV,KAAK,EAACe,WADA;UAENd,WAAW,EAACW;QAFN,CAAP;MAIA;;IACA,KAAK,QAAL;MAAgB;QACf,MAAMN,iBAAiB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAlD,CAA1B;QACA,MAAME,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYM,iBAAZ,CAArB;QAEA,MAAMM,iBAAiB,GAAGD,YAAY,CAACO,CAAvC;QACA,IAAIH,WAAJ;;QACA,IAAIJ,YAAY,CAACQ,MAAb,KAAwB,CAA5B,EAAgC;UAC9BJ,WAAW,GAAGZ,KAAK,CAACH,KAAN,CAAYoB,MAAZ,CAAqBZ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAhD,CAAd;QACD,CAFD,MAGK;UACJ,IAAKO,UAAU,GAAG,EACjB,GAAGL,YADc;YAEjBE,MAAM,EAACF,YAAY,CAACE,MAAb,GAAsB;UAFZ,CAAlB;UAICE,WAAW,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAd;UACAe,WAAW,CAACT,iBAAD,CAAX,GAAiCU,UAAjC;QAED;;QACD,OAAO;UACLhB,KAAK,EAACe,WADD;UAELd,WAAW,EAACW;QAFP,CAAP;MAMD;;IAED;MACA,OAAO;QAACb;MAAD,CAAP;EArDJ;AAwDD,CA1DD,C,CA6DA;;;AACC,OAAO,MAAMsB,KAAK,GAAGvB,WAAW,CAACI,OAAD,CAAzB,C,CACR"},"metadata":{},"sourceType":"module"}