{"ast":null,"code":"// import { createStore } from \"redux\";\n// const initalState = {\n//   items:[],\n//   totalAmount:0\n// }\n// const reducer = (state=initalState, action) => {\n//   switch (action.type) {\n//     case 'Add' :\n//       { \n//          let updateTotalAmount;\n//         const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\n//        const existingItem = state.items[existingItemIndex]\n//         updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\n//        let updateItems ;\n//        if(existingItem) {\n//         let updateItem = {\n//           ...existingItem,\n//           amount:existingItem.amount + action.payload.amount\n//         }\n//         updateItems = [...state.items];\n//         updateItems[existingItemIndex] = updateItem;\n//        }\n//        else {\n//         updateItems.concat(action.payload)\n//        }\n//        return {\n//         items:updateItems,\n//         totalAmount:updateTotalAmount\n//        }\n//       }\n//        case 'Remove' : { \n//         const existingItemIndex = state.items.findindex(item =>  item.id === action.id);\n//         const existingItem = state.items[existingItemIndex];\n//         const updateTotalAmount = existingItem.a\n//         let updateItems;\n//         if (existingItem.length === 1)  {\n//           updateItems = state.items.filter ( item => item.id !== action.id)\n//         } \n//         else {\n//          let  updateItem = {\n//           ...existingItem,\n//           amount:existingItem.amount - 1\n//          }\n//           updateItems = [...state.items];\n//           updateItems[existingItemIndex] = updateItem;\n//         }\n//         return {\n//           items:updateItems,\n//           totalAmount:updateTotalAmount\n//         }\n//       }\n//       // \n//       default: \n//       return state\n//   }\n// }\n// // store\n//  export const store = createStore(reducer)\n// // store.dispatch // anywhere you want","map":{"version":3,"names":[],"sources":["X:/kalBanan/udemy/projects/ORDER__FOOD__PROJECT/secon times/src/component/store_redux/store.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\n\r\n// const initalState = {\r\n//   items:[],\r\n//   totalAmount:0\r\n// }\r\n// const reducer = (state=initalState, action) => {\r\n\r\n//   switch (action.type) {\r\n//     case 'Add' :\r\n//       { \r\n//          let updateTotalAmount;\r\n//         const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\r\n//        const existingItem = state.items[existingItemIndex]\r\n\r\n//         updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\r\n\r\n//        let updateItems ;\r\n//        if(existingItem) {\r\n//         let updateItem = {\r\n//           ...existingItem,\r\n//           amount:existingItem.amount + action.payload.amount\r\n//         }\r\n\r\n//         updateItems = [...state.items];\r\n//         updateItems[existingItemIndex] = updateItem;\r\n\r\n//        }\r\n//        else {\r\n//         updateItems.concat(action.payload)\r\n//        }\r\n//        return {\r\n//         items:updateItems,\r\n//         totalAmount:updateTotalAmount\r\n//        }\r\n//       }\r\n//        case 'Remove' : { \r\n//         const existingItemIndex = state.items.findindex(item =>  item.id === action.id);\r\n//         const existingItem = state.items[existingItemIndex];\r\n\r\n//         const updateTotalAmount = existingItem.a\r\n//         let updateItems;\r\n//         if (existingItem.length === 1)  {\r\n//           updateItems = state.items.filter ( item => item.id !== action.id)\r\n//         } \r\n//         else {\r\n//          let  updateItem = {\r\n//           ...existingItem,\r\n//           amount:existingItem.amount - 1\r\n//          }\r\n//           updateItems = [...state.items];\r\n//           updateItems[existingItemIndex] = updateItem;\r\n\r\n//         }\r\n//         return {\r\n//           items:updateItems,\r\n//           totalAmount:updateTotalAmount\r\n//         }\r\n        \r\n\r\n//       }\r\n//       // \r\n\r\n//       default: \r\n//       return state\r\n//   }\r\n\r\n// }\r\n\r\n\r\n// // store\r\n//  export const store = createStore(reducer)\r\n// // store.dispatch // anywhere you want\r\n\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA"},"metadata":{},"sourceType":"module"}