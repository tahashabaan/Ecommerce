{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase/firebase';\n\nconst useAuth = () => {\n  _s();\n\n  const [user, setUser] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const userAuthHandler = async (userHandler, email, password, nav) => {\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      await userHandler(auth, email, password);\n      navigate(nav);\n    } catch (error) {\n      setError(error.message);\n      alert(error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      navigate('/login');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscrib = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n    return unsubscrib;\n  }, []);\n  return {\n    user,\n    error,\n    isLoading,\n    logOut,\n    userAuthHandler\n  };\n};\n\n_s(useAuth, \"PIzYPt1B+9HBZEg0Vzv5RI6ghhc=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useAuth; // const signUp = async(email, password, name) => {\n//       try{ \n//         await createUserWithEmailAndPassword(auth, email, password, name);\n//         navigate('/login')\n//        }   catch(error)  {  \n//         setError(error.meaasge) \n//         alert(error.message)\n//         navigate('/register')    \n//       }\n//   }\n// //   const signIn= async(email, password) => {\n// //     try { \n// //       await signInWithEmailAndPassword(auth, email, password);\n// //       navigate('/')\n// //       // setIsLogin(false);\n// //      }  catch(error) {  \n// //         alert(error.message)   \n// //       // setIsLogin(false);  \n// //     }\n// // }","map":{"version":3,"names":["onAuthStateChanged","signOut","useEffect","useState","useNavigate","auth","useAuth","user","setUser","error","setError","isLoading","setIsLoading","navigate","userAuthHandler","userHandler","email","password","nav","message","alert","logOut","unsubscrib"],"sources":["X:/kalBanan/udemy/projects/e_commerce/Ecommerce/src/component/hooks/use-auth.js"],"sourcesContent":["import {  onAuthStateChanged, signOut } from 'firebase/auth';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {auth} from '../../firebase/firebase';\r\n\r\n \r\n\r\n const useAuth =() => {\r\n\r\n   const [user, setUser] = useState();\r\n   const [error, setError] = useState(null);\r\n   const [isLoading, setIsLoading] = useState(true);\r\n\r\n   const navigate = useNavigate();\r\n\r\n   const userAuthHandler= async (userHandler,email, password,nav )   => {\r\n\r\n      setError(null);\r\n      setIsLoading(true);\r\n\r\n      try { \r\n       await userHandler(auth, email, password );\r\n       navigate(nav)\r\n\r\n    } catch(error) {\r\n        setError(error.message)\r\n        alert(error.message)\r\n       }\r\n       setIsLoading(false);\r\n   }\r\n   \r\n\r\n const logOut= async() => {\r\n\r\n  try { \r\n\r\n        await signOut(auth) \r\n        navigate('/login') \r\n\r\n       }  catch(error)   {   setError(error.message)  }\r\n\r\n } \r\n\r\n useEffect( () => {\r\n\r\n  const unsubscrib = onAuthStateChanged(auth, (user) => {\r\n\r\n    if (user) { setUser(user);  }\r\n\r\n    else { setUser(null) }\r\n\r\n  })\r\n\r\n  return unsubscrib;\r\n\r\n }, []);\r\n\r\n\r\n  return { \r\n    user, error,isLoading, logOut, userAuthHandler }\r\n}\r\n\r\nexport default useAuth;\r\n\r\n\r\n// const signUp = async(email, password, name) => {\r\n  //       try{ \r\n  //         await createUserWithEmailAndPassword(auth, email, password, name);\r\n  //         navigate('/login')\r\n  \r\n  //        }   catch(error)  {  \r\n  //         setError(error.meaasge) \r\n  //         alert(error.message)\r\n  //         navigate('/register')    \r\n  //       }\r\n  //   }\r\n  \r\n  // //   const signIn= async(email, password) => {\r\n  \r\n  // //     try { \r\n  \r\n  // //       await signInWithEmailAndPassword(auth, email, password);\r\n  // //       navigate('/')\r\n  // //       // setIsLogin(false);\r\n  \r\n  // //      }  catch(error) {  \r\n  // //         alert(error.message)   \r\n  // //       // setIsLogin(false);  \r\n  // //     }\r\n  \r\n  // // }\r\n"],"mappings":";;AAAA,SAAUA,kBAAV,EAA8BC,OAA9B,QAA6C,eAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,IAAR,QAAmB,yBAAnB;;AAIC,MAAMC,OAAO,GAAE,MAAM;EAAA;;EAEnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EAEA,MAAMU,QAAQ,GAAGT,WAAW,EAA5B;;EAEA,MAAMU,eAAe,GAAE,OAAOC,WAAP,EAAmBC,KAAnB,EAA0BC,QAA1B,EAAmCC,GAAnC,KAA8C;IAElER,QAAQ,CAAC,IAAD,CAAR;IACAE,YAAY,CAAC,IAAD,CAAZ;;IAEA,IAAI;MACH,MAAMG,WAAW,CAACV,IAAD,EAAOW,KAAP,EAAcC,QAAd,CAAjB;MACAJ,QAAQ,CAACK,GAAD,CAAR;IAEF,CAJC,CAIA,OAAMT,KAAN,EAAa;MACXC,QAAQ,CAACD,KAAK,CAACU,OAAP,CAAR;MACAC,KAAK,CAACX,KAAK,CAACU,OAAP,CAAL;IACA;;IACDP,YAAY,CAAC,KAAD,CAAZ;EACH,CAdD;;EAiBF,MAAMS,MAAM,GAAE,YAAW;IAExB,IAAI;MAEE,MAAMpB,OAAO,CAACI,IAAD,CAAb;MACAQ,QAAQ,CAAC,QAAD,CAAR;IAEA,CALN,CAKQ,OAAMJ,KAAN,EAAe;MAAIC,QAAQ,CAACD,KAAK,CAACU,OAAP,CAAR;IAA0B;EAErD,CATD;;EAWAjB,SAAS,CAAE,MAAM;IAEhB,MAAMoB,UAAU,GAAGtB,kBAAkB,CAACK,IAAD,EAAQE,IAAD,IAAU;MAEpD,IAAIA,IAAJ,EAAU;QAAEC,OAAO,CAACD,IAAD,CAAP;MAAiB,CAA7B,MAEK;QAAEC,OAAO,CAAC,IAAD,CAAP;MAAe;IAEvB,CANoC,CAArC;IAQA,OAAOc,UAAP;EAEA,CAZQ,EAYN,EAZM,CAAT;EAeC,OAAO;IACLf,IADK;IACCE,KADD;IACOE,SADP;IACkBU,MADlB;IAC0BP;EAD1B,CAAP;AAED,CArDA;;GAAMR,O;UAMaF,W;;;AAiDpB,eAAeE,OAAf,C,CAGA;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}