{"ast":null,"code":"import { createContext } from 'react';\nconst CartContext = /*#__PURE__*/createContext({\n  cartItem: [],\n  showCart: false,\n  onAddItem: item => {},\n  onRemoveItem: id => {},\n  onShowCart: () => {},\n  onHideCart: () => {}\n}); //  const cartValue ={\n//  }\n// export const CartContextProvider = (props) => {\n//   const [cartItem, setCartItem] = useState([]);\n//   const [totalAmount, setTotalAmount] = useState(0)\n//   const [showCart, setShowCart] = useState(false);\n//   const [cartState, dispatchCart] = useReducer(cartReducer, cartValue)\n//   const addItemToCartHandler = (items,amount) => {\n//     setCartItem(preItem => {\n//       const existingCartItemIndex = preItem.findIndex(item => item.id === items.id);\n//       const existingCartItem = preItem[existingCartItemIndex];\n//       let updateItems;\n//       if(existingCartItem){\n//        existingCartItem.amount += amount;\n//        const updateItem = {\n//         ...existingCartItem\n//         }\n//      updateItems =[...preItem];\n//      updateItems[existingCartItemIndex] = updateItem\n//       }\n//       else{\n//         updateItems = [...preItem,items]\n//       }\n//     return updateItems  }) \n//     // setAmount\n//     setTotalAmount((preAmount) => {\n//       preAmount += items.price * items.amount;\n//       return preAmount;\n//     })\n//  }\n//  const removeItemToCartHandler = (items,id) => {\n//   setCartItem(preItem => {\n//     const existingCartItemIndex = preItem.findIndex(item => item.id === id)\n//     const existingCartItem = preItem[existingCartItemIndex]\n//     let updateItems;\n//     if (existingCartItem.amount === 1){\n//       updateItems = preItem.filter(item => item.id !== id)\n//     }\n//     else {\n//       existingCartItem.amount -= 1\n//       const updateItem = {\n//         ...existingCartItem\n//       }\n//       updateItems = [...preItem];\n//       updateItems[existingCartItemIndex] = updateItem\n//     }\n//     return updateItems\n//   })\n//   setTotalAmount((preAmount) => {\n//     preAmount -= items.price;\n//     return preAmount;\n//   })\n// }\n//  const onShowCartHandler = () => {\n//    setShowCart(true)\n//  }\n//  const onHideCartHandler = () => {\n//    setShowCart(false)\n//  }\n//  return <CartContext.Provider value={{\n//   cartItem:cartItem,\n//   showCart:showCart,\n//   onAddItem:addItemToCartHandler,\n//   onRemoveItem:removeItemToCartHandler,\n//   onShowCart:onShowCartHandler,\n//   onHideCart:onHideCartHandler,\n//   totalAmount\n//  }}>\n//   {props.children}\n//  </CartContext.Provider>\n// }\n\nexport default CartContext;","map":{"version":3,"names":["createContext","CartContext","cartItem","showCart","onAddItem","item","onRemoveItem","id","onShowCart","onHideCart"],"sources":["X:/kalBanan/udemy/react-max/section-11  project__order-food/01-strat-project/src/store/cart-context.js"],"sourcesContent":["import{ createContext} from 'react';\r\n\r\n\r\n const CartContext = createContext({\r\n  cartItem:[],\r\n  showCart:false,\r\n  onAddItem:(item) => { },\r\n  onRemoveItem:(id) => {},\r\n  onShowCart:() => {},\r\n  onHideCart: () => {}\r\n })\r\n\r\n//  const cartValue ={\r\n\r\n//  }\r\n\r\n// export const CartContextProvider = (props) => {\r\n//   const [cartItem, setCartItem] = useState([]);\r\n//   const [totalAmount, setTotalAmount] = useState(0)\r\n//   const [showCart, setShowCart] = useState(false);\r\n\r\n//   const [cartState, dispatchCart] = useReducer(cartReducer, cartValue)\r\n\r\n//   const addItemToCartHandler = (items,amount) => {\r\n//     setCartItem(preItem => {\r\n\r\n//       const existingCartItemIndex = preItem.findIndex(item => item.id === items.id);\r\n\r\n//       const existingCartItem = preItem[existingCartItemIndex];\r\n\r\n//       let updateItems;\r\n\r\n//       if(existingCartItem){\r\n//        existingCartItem.amount += amount;\r\n//        const updateItem = {\r\n//         ...existingCartItem\r\n//         }\r\n\r\n//      updateItems =[...preItem];\r\n//      updateItems[existingCartItemIndex] = updateItem\r\n//       }\r\n//       else{\r\n//         updateItems = [...preItem,items]\r\n//       }\r\n//     return updateItems  }) \r\n    \r\n//     // setAmount\r\n//     setTotalAmount((preAmount) => {\r\n//       preAmount += items.price * items.amount;\r\n//       return preAmount;\r\n//     })\r\n\r\n//  }\r\n//  const removeItemToCartHandler = (items,id) => {\r\n//   setCartItem(preItem => {\r\n//     const existingCartItemIndex = preItem.findIndex(item => item.id === id)\r\n\r\n//     const existingCartItem = preItem[existingCartItemIndex]\r\n\r\n//     let updateItems;\r\n\r\n//     if (existingCartItem.amount === 1){\r\n//       updateItems = preItem.filter(item => item.id !== id)\r\n//     }\r\n\r\n//     else {\r\n//       existingCartItem.amount -= 1\r\n//       const updateItem = {\r\n//         ...existingCartItem\r\n//       }\r\n\r\n//       updateItems = [...preItem];\r\n//       updateItems[existingCartItemIndex] = updateItem\r\n//     }\r\n//     return updateItems\r\n//   })\r\n\r\n//   setTotalAmount((preAmount) => {\r\n//     preAmount -= items.price;\r\n//     return preAmount;\r\n//   })\r\n  \r\n// }\r\n\r\n//  const onShowCartHandler = () => {\r\n//    setShowCart(true)\r\n//  }\r\n\r\n//  const onHideCartHandler = () => {\r\n//    setShowCart(false)\r\n//  }\r\n\r\n//  return <CartContext.Provider value={{\r\n//   cartItem:cartItem,\r\n//   showCart:showCart,\r\n//   onAddItem:addItemToCartHandler,\r\n//   onRemoveItem:removeItemToCartHandler,\r\n//   onShowCart:onShowCartHandler,\r\n//   onHideCart:onHideCartHandler,\r\n//   totalAmount\r\n//  }}>\r\n//   {props.children}\r\n//  </CartContext.Provider>\r\n// }\r\n\r\nexport default CartContext;"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,OAA5B;AAGC,MAAMC,WAAW,gBAAGD,aAAa,CAAC;EACjCE,QAAQ,EAAC,EADwB;EAEjCC,QAAQ,EAAC,KAFwB;EAGjCC,SAAS,EAAEC,IAAD,IAAU,CAAG,CAHU;EAIjCC,YAAY,EAAEC,EAAD,IAAQ,CAAE,CAJU;EAKjCC,UAAU,EAAC,MAAM,CAAE,CALc;EAMjCC,UAAU,EAAE,MAAM,CAAE;AANa,CAAD,CAAjC,C,CASD;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeR,WAAf"},"metadata":{},"sourceType":"module"}