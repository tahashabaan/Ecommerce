{"ast":null,"code":"import { createStore } from \"redux\";\nconst initalState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'Add':\n      let updateTotalAmount;\n      {\n        // const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\n        existingItem = state.items.find(item => item.id === action.id);\n        updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\n        let updateItems;\n\n        if (existingItem) {\n          let updateItem = { ...existingItem,\n            amount: existingItem.amount + action.payload.amount\n          };\n          updateItems = [...state.items];\n          updateItems[existingItemIndex] = updateItem;\n        } else {\n          updateItems.concat(action.payload);\n        } //  return {\n        //   items:updateItems,\n        //   totalAmount:updateTotalAmount\n        //  }\n\n      }\n\n    case 'Remove':\n      {\n        const existingItemIndex = state.items.findindex(item => item.id === action.id);\n        const existingItem = state.items[existingItemIndex];\n        const updateTotalAmount = existingItem.a;\n        let updateItems;\n\n        if (existingItem.length === 1) {\n          updateItems = state.items.filter(item => item.id !== action.id);\n        } else {\n          let updateItem = { ...existingItem,\n            amount: existingItem.amount - 1\n          };\n          updateItems = [...state.items];\n          updateItems[existingItemIndex] = updateItem;\n        }\n\n        return {\n          items: updateItems,\n          totalAmount: updateTotalAmount\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // store\n\n\nexport const store = createStore(reducer); // store.dispatch // anywhere you want","map":{"version":3,"names":["createStore","initalState","items","totalAmount","reducer","state","action","type","updateTotalAmount","existingItem","find","item","id","amount","price","updateItems","updateItem","payload","existingItemIndex","concat","findindex","a","length","filter","store"],"sources":["X:/kalBanan/udemy/projects/ORDER__FOOD__PROJECT/secon times/src/component/store_redux/store.js"],"sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initalState = {\r\n  items:[],\r\n  totalAmount:0\r\n}\r\nconst reducer = (state=initalState, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'Add' :\r\n      let updateTotalAmount;\r\n       { \r\n        // const existingItemIndex = state.items.findindex(item => item.id === action.payload.id);\r\n        existingItem = state.items.find(item => item.id === action.id)\r\n\r\n        updateTotalAmount = state.totalAmount + existingItem.amount * existingItem.price;\r\n\r\n       let updateItems ;\r\n       if(existingItem) {\r\n        let updateItem = {\r\n          ...existingItem,\r\n          amount:existingItem.amount + action.payload.amount\r\n        }\r\n\r\n        updateItems = [...state.items];\r\n        updateItems[existingItemIndex] = updateItem;\r\n\r\n       }\r\n       else {\r\n        updateItems.concat(action.payload)\r\n       }\r\n      //  return {\r\n      //   items:updateItems,\r\n      //   totalAmount:updateTotalAmount\r\n      //  }\r\n      }\r\n       case 'Remove' : { \r\n        const existingItemIndex = state.items.findindex(item =>  item.id === action.id);\r\n        const existingItem = state.items[existingItemIndex];\r\n\r\n        const updateTotalAmount = existingItem.a\r\n        let updateItems;\r\n        if (existingItem.length === 1)  {\r\n          updateItems = state.items.filter ( item => item.id !== action.id)\r\n        } \r\n        else {\r\n         let  updateItem = {\r\n          ...existingItem,\r\n          amount:existingItem.amount - 1\r\n         }\r\n          updateItems = [...state.items];\r\n          updateItems[existingItemIndex] = updateItem;\r\n\r\n        }\r\n        return {\r\n          items:updateItems,\r\n          totalAmount:updateTotalAmount\r\n        }\r\n        \r\n\r\n      }\r\n\r\n      default: \r\n      return state\r\n  }\r\n\r\n}\r\n\r\n\r\n// store\r\n export const store = createStore(reducer)\r\n// store.dispatch // anywhere you want\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAC,EADY;EAElBC,WAAW,EAAC;AAFM,CAApB;;AAIA,MAAMC,OAAO,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAxBJ,WAAwB;EAAA,IAAXK,MAAW;;EAE7C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MACE,IAAIC,iBAAJ;MACC;QACC;QACAC,YAAY,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACM,EAA5C,CAAf;QAEAJ,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBM,YAAY,CAACI,MAAb,GAAsBJ,YAAY,CAACK,KAA3E;QAED,IAAIC,WAAJ;;QACA,IAAGN,YAAH,EAAiB;UAChB,IAAIO,UAAU,GAAG,EACf,GAAGP,YADY;YAEfI,MAAM,EAACJ,YAAY,CAACI,MAAb,GAAsBP,MAAM,CAACW,OAAP,CAAeJ;UAF7B,CAAjB;UAKAE,WAAW,GAAG,CAAC,GAAGV,KAAK,CAACH,KAAV,CAAd;UACAa,WAAW,CAACG,iBAAD,CAAX,GAAiCF,UAAjC;QAEA,CATD,MAUK;UACJD,WAAW,CAACI,MAAZ,CAAmBb,MAAM,CAACW,OAA1B;QACA,CAnBD,CAoBD;QACA;QACA;QACA;;MACC;;IACA,KAAK,QAAL;MAAgB;QACf,MAAMC,iBAAiB,GAAGb,KAAK,CAACH,KAAN,CAAYkB,SAAZ,CAAsBT,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACM,EAAlD,CAA1B;QACA,MAAMH,YAAY,GAAGJ,KAAK,CAACH,KAAN,CAAYgB,iBAAZ,CAArB;QAEA,MAAMV,iBAAiB,GAAGC,YAAY,CAACY,CAAvC;QACA,IAAIN,WAAJ;;QACA,IAAIN,YAAY,CAACa,MAAb,KAAwB,CAA5B,EAAgC;UAC9BP,WAAW,GAAGV,KAAK,CAACH,KAAN,CAAYqB,MAAZ,CAAqBZ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACM,EAAhD,CAAd;QACD,CAFD,MAGK;UACJ,IAAKI,UAAU,GAAG,EACjB,GAAGP,YADc;YAEjBI,MAAM,EAACJ,YAAY,CAACI,MAAb,GAAsB;UAFZ,CAAlB;UAICE,WAAW,GAAG,CAAC,GAAGV,KAAK,CAACH,KAAV,CAAd;UACAa,WAAW,CAACG,iBAAD,CAAX,GAAiCF,UAAjC;QAED;;QACD,OAAO;UACLd,KAAK,EAACa,WADD;UAELZ,WAAW,EAACK;QAFP,CAAP;MAMD;;IAED;MACA,OAAOH,KAAP;EAvDJ;AA0DD,CA5DD,C,CA+DA;;;AACC,OAAO,MAAMmB,KAAK,GAAGxB,WAAW,CAACI,OAAD,CAAzB,C,CACR"},"metadata":{},"sourceType":"module"}